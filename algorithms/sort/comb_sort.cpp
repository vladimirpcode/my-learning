#include <iostream>
#include <vector>
#include "test.h"

void comb_sort(std::vector<int>& values){
    constexpr double factor = 1.247; //Фактор уменьшения
    double step = values.size() - 1;

    while (step >= 1){
        for (int i = 0; i + step < values.size(); ++i){
            if (values[i] > values[i+step]){
                std::swap(values[i], values[i+step]);
            }
        }
        step /= factor;
    }
}

int main(){
    test(comb_sort);
    return 0;
}

/*
Сортировка расчёской — улучшение сортировки пузырьком. 
Её идея состоит в том, чтобы «устранить» элементы 
с небольшими значения в конце массива, которые замедляют 
работу алгоритма. Если при пузырьковой и шейкерной 
сортировках при переборе массива сравниваются соседние 
элементы, то при «расчёсывании» сначала берётся достаточно 
большое расстояние между сравниваемыми значениями, 
а потом оно сужается вплоть до минимального.

Первоначальный разрыв нужно выбирать не случайным образом, 
а с учётом специальной величины — фактора уменьшения, 
оптимальное значение которого равно 1,247. 
Сначала расстояние между элементами будет равняться 
размеру массива, поделённому на 1,247; 
на каждом последующем шаге расстояние будет снова делиться 
на фактор уменьшения — и так до окончания работы алгоритма.

Худшее время: O(n^2)
Среднее время: Ω(n^2 / 2^p), где p - количество инкрементов
Лучшее время: O(n log n)

Затраты памяти: O(1)
*/